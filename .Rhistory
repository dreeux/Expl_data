install_from_swirl("Open Intro")
swirl()
y<-100
cars$type
sqrt(y)
z<-sqrt(y)
?sqrt
cars
10
range(cars$price)
sum(cars$price)
1079.6/54
mean(cars$price)
mpg.midsize
sort(mpg.midsize)
mpg.sorted<-sort(mpg.midsize)
19
median(mpg.sorted)
summay(cars$mpgcity)
summary(cars$mpgcity)
summary(cars$mpgCity)
nxt()
25
21
skip()
nxt()
30
25
22
skip()
16-20
skip()
-4
skip()
bye()
swirl()
15
17
sd(mpg.midsize)
1.895554^2
25000
24
library("swirl")
swirl()
install_from_swirl("Data Analysis")
swirl()
library("swirl")
rm(list=ls())
swirl()
skip()
bye()
swirl()
info()
main()
main()
main
main()
install-FROM_SWIRL("Mathematical Biostatistics Boot Camp")
library("swirl")
install_from_swirl("Mathematical Biostatistics Boot Camp")
swirl()
library("swirl")
swirl()
sigma<-10mph
sigma<-10
delta<-5
play()
`
?qnorm
?qnorm
nxt()
zAlpha <- qnorm(0.95,10)
zAlpha <- qnorm(0.95)
zBeta <-qnorm(.2)
(sigma / delta)^2 * (zAlpha - zBeta)^2
effectsize
effectsize<-delta/sigma
pwr.norm.test(d=effectSize, sig.level=0.05, power=0.80, alternative="greater"
pwr.norm.test(d=effectSize, sig.level=0.05, power=0.80, alternative="greater")
pwr.t.test(d=effectSize, sig.level=0.05, power=0.80, type="one.sample", alternative="greater")
swirl()
install_from_swirl("Regression Models")
library(awirl)
library(swirl)
ls()
rm(list=ls)
rm(list=ls())
swirl()
swirl()
swirl()
5+7
x <- 5+7
x
y <- x - 3
y
quit()
library(swirl)
rm(list = ls)
rm(list = ls())
swirl
swirl()
head(flags)
dim(flags)
class(flags)
lapply(flags, class)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
?sapply
cls_vect <- sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[ , 11:17]
head()
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[ ,19:23]
lapply(flag_shapes, range)
flags[,19:23]
shape_mat <- sapply(flags_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,6,6))
unique(c(3,4,5,5,5,6,6))
lapply(flags_unique)
lapply(flags, unique)
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
unique(flags, unique)
unique(flag, unique)
sapply(flag, unique)
sapply(flags, unique)
vapply(flags, unique,numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
summary(flags$population, flags$landmass,summary)
tapply(flags$population, flags$landmass,summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(palnts)
head(plants)
head(plants,10L)
head(plants,10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10 )
letters
LETTERS
sample(LETTERA)
sample(LETTERS)
sample(c(0,1),100,replace = TRUE, prob = c(0.3,0.7))
flips <- sample(c(0,1),100,replace = TRUE, prob = c(0.3,0.7))
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = .7)
flips2 <- rbinom(1, size = 100, prob = .7)
flips2 <- rbinom(100, 1,  prob = .7)
flips2
sum(heads)
sum(flips2)
rnorm()
?rnorm()
?rnorm
rnorm(10)
rnorm(100, 25)
rnorm(10, 100, 25)
?rpois()
rpois(5, 10)
my_pois <- replicate(100, rpois(5,10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
install.packages(pylr)
install.packages(plyr)
install.packages("plyr")
library(XML)
books <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
library(plyr)
ldply(xmlToList(books), data.frame)
download.file(fileUrl,destfile="restaurant.XML", method="curl")
doc<-xmlTreeParse("restaurant.XML",useInternal=TRUE)
download.file(fileUrl,destfile="restaurant.XML", method="curl")
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
download.file(fileUrl,destfile="restaurant.XML", method="curl")
library(plyr)
ldply(xmlToList(books), data.frame)
doc<-xmlTreeParse("restaurant.XML",useInternal=TRUE
)
ldply(xmlToList(doc), data.frame)
warnings()
doc<-xmlTreeParse("restaurant.XML",useInternal=TRUE)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
names(rootNode)
?xmlRoot
?xmlValue
xmlSApply(rootNode, xmlValue)
?xmlTreeParse
xpathSApply(rootNode, "//zipcode", xmlValue)
zip <- xpathSApply(rootNode, "//zipcode", xmlValue)
?xpathSApply
zip1 <- xpathSApply(zip, "//21231", xmlValue)
class(zip)
zip1 <- xpathSApply(zip, "//as.character(21231)", xmlValue)
zip1 <- xpathSApply(zip, //21231, xmlValue)
for(i in zip){
if(i == 21231){
z <- print(i)
}
}
z
str(z)
for(i in zip){
if(i == 21231){
z <- dim(print(i))
}
}
z
dim(z)
str(z)
for(i in zip){
if(i == 21231){
print(i,)
}
}
for(i in zip){
if(i == 21231){
z <- i
print z
}
}
for(i in zip){
if(i == 21231){
z <- c(print(i),)
}
}
for(i in zip){
if(i == 21231){
z <- print(i),
}
}
for(i in zip){
if(i == 21231){
z <- print i,
}
}
for(i in zip){
if(i == 21231){
z <- print i
}
}
for(i in zip){
if(i == 21231){
z <- print(i),
}
}
for(i in zip){
if(i == 21231){
print(i),
}
}
for(i in zip){
if(i == 21231){
print(i)
}
}
z <- for(i in zip){
if(i == 21231){
print(i)
}
}
str(z)
z <- function(x){ for(i in zip){
if(i == 21231){
print(i)
}
}
}
z
str(z)
z(21231)
str(z)
y <- z(zip)
for(i in zip){
if(i == 21231){
print(i)
sum(i)
}
}
?xll
?Devices
?cat
?sys.time
/system.time
system.time
?system.time
setwd("/home/arun/data")
library(data.table)
?data.table
?fread
a <- fread("household_power_consumption.txt")
a <- fread("household_power_consumption.txt", colClassses='character')
a <- fread("household_power_consumption.txt", colClassses="character")
?read.table
na.strings = "?"
help(fread)
dataset <- fread(file_path, sep=";", na.strings=c("?","NA",""), header=TRUE, colClasses="character")
dataset <- fread("household_power_consumption.txt", sep=";", na.strings=c("?","NA",""), header=TRUE, colClasses="character")
str(dataset)
?read.tablee
?read.table
?cat
tables()
?strtime
?strptime
str(a)
strptime(dataset$Date)
strptime(dataset$Date, "%Y-%m-%d %H:%M:%S")
strptime(dataset$Date, "%Y-%m-%d %H:%M:%S", tz = "")
data <- dataset[dataset$Date == "b"]
data
a$Date
b <- dataset[Date == "1/2/2012", ]
b <- dataset[(dataset$Date == "1/02/2007"| dataset$Date == "2/02/2007")]
?fread
dataset <- fread("household_power_consumption.txt", sep=";", na.strings=c("?","NA",""), StringsAsFactors=FALSE, colClasses="character")
?read.table
read.table("household_power_consumption.txt", header = TRUE, StringsAsFactors = FALSE)
b <- dataset[(dataset$Date == "1/2/2007"| dataset$Date == "2/2/2007")]
str(data)
?gl
g <- gl(2,50)
g
?points
library(datasets)
?hist
save.image("~/data/proj1.RData")
hist(b$Global_active_power, col = "red")
hist(b$as.numeric(Global_active_power), col = "red")
?as.numeric
plot1 <- as.numeric(b$Global_active_power)
hist(b$aplot1, col = "red")
hist(b$plot1, col = "red")
class(plot1)
hist(plot1, col = "red")
title("Global Active Power")
hist(plot1, col = "red", main = NULL)
title("Global Active Power")
hist(plot1, col = "red", main = "Global Active Power")
hist(plot1, col = "green", main = "Global Active Power")
hist(plot1, col = "red", main = "Global Active Power")
hist(plot1, col = "red", main = "Global Active Power", xname = Global Active Powe("kilowatts"))
hist(plot1, col = "red", main = "Global Active Power", xlab = Global Active Powe("kilowatts"))
hist(plot1, col = "red", main = "Global Active Power", xlab = "Global Active Power(kilowatts"))
hist(plot1, col = "red", main = "Global Active Power", xlab = "Global Active Power(kilowatts)")
b$time
b$Time
?plots
?plot
?strptime
plot2 <- strptime(c("b$Date", "b$Time"), format = "%Y-%m-%d %H:%M:%S" )
plot(plot1, plot2, type ="l")
plot2 <- strptime(c("b$Date"), format = "%Y-%m-%d %H:%M:%S" )
plot2 <- strptime(b$Date, format = "%Y-%m-%d %H:%M:%S" )
plot2 <- strptime(b$Date)
?as.POSIXCt
?as.POSIXct
e <- POSIXct("b$Date", format = " "%Y-%m-%d" )
e <- POSIXct("b$Date", format =  "%Y-%m-%d %H:%M:%S" )
e <- as.POSIXct("b$Date", format =  "%Y-%m-%d %H:%M:%S" )
e <- as.POSIXct("b$Date", format =  "%Y-%m-%d " )
e
e <- as.POSIXct("b$Date")
e <- as.POSIXct("b$Date", tz = "", ...)
e <- as.POSIXct("b$Date", tz = "")
e <- as.POSIXct("b$Date", tz = "", format = "%Y-%m-%d %H:%M:%S"  )
e
?strptime
strptime(b$Date, "%Y-%m-%d %H:%M:%S", tz = "" )
strptime("b$Date", "%Y-%m-%d %H:%M:%S", tz = "" )
strptime("b$Date", "%Y-%m-%d %H:%M:%S", tz = "GMT" )
strptime("b$Date", format = "%Y-%m-%d %H:%M:%S", tz = "GMT" )
strptime("b$Date", tz = "GMT" )
strptime("b$Date",format,  tz = "GMT" )
strptime(b$Date,format,  tz = "GMT" )
example(strptime)
b$Time
b$Date
e <- c("1/2/2007", "2/2/2007")
z <- strptime(e, "%Y-%m-%d" )
plot(plot1, z, type = "l")
b[,Date := as.Date(Date,format = "%d/%m/%Y")]
concat = paste(filtered_data$Date,filtered_data$Time,sep=' ')
concat = paste(b$Date,b$Time,sep=' ')
totime = strptime(concat,"%Y-%m-%d %H:%M:%S")
plot(totime,sub_temp$Global_active_power,type = "l",ylab = "Global Active Power(kilowatts)",xlab = "")
plot(totime,b$Global_active_power,type = "l",ylab = "Global Active Power(kilowatts)",xlab = "")
b[,Date = as.Date(Date,format = "%d/%m/%Y")]
b[,Date := as.Date(Date,format = "%d/%m/%Y")]
b[,Date <- as.Date(Date,format = "%d/%m/%Y")]
k <- b[,Date <- as.Date(Date,format = "%d/%m/%Y")]
b
str(b)
str(k)
?concat
?paste
concat = paste(b$Date,b$Time)
totime = strptime(concat,"%Y-%m-%d %H:%M:%S")
plot(totime,b$Global_active_power,type = "l",ylab = "Global Active Power(kilowatts)",xlab = "")
b[,Date <- as.Date(Date,format = "%d/%m/%Y")]
?with
?lines
plot(totime,Sub_metering_1 , type = "l", col = "black")
f <- as.numeric(b$Sub_meterung_1)
plot(totime, f , type = "l", col = "black")
f <- as.numeric("b$Sub_metering_1")
?as.numeric
b$Sub_metering_1
class(b$Sub_metering_1)
b$Sub_metering_1[!is.na(b$Sub_metering_1)]
f <- as.numeric("b$Sub_metering_1")
plot(totime, Sub_metering_1, type = "l", )
plot(totime, b$Sub_metering_1, type = "l", )
?plots
?plot
plot(totime, b$Sub_metering_1, type = "l", ylab = NULL )
b[,Date := as.Date(Date,format = "%d/%m/%Y")]
concat = paste(b$Date,b$Time,sep=' ')
totime = strptime(concat,"%Y-%m-%d %H:%M:%S")
plot(totime, b$Sub_metering_1, type = "l", color = "black", xlab = "Energy sub metering", ylab = NULL)
plot(totime, b$Sub_metering_1, type = "l", color = "black", ylab = "Energy sub metering", xlab = NULL)
plot(totime, b$Sub_metering_1, type = "l",  ylab = "Energy sub metering", xlab = "")
line(totime, b$Sub_metering_2, type = "l", color = "red")
line(totime, b$Sub_metering_2, ...)
line(totime, b$Sub_metering_2, color = "red")
b$Sub_metering_2
line(totime, b$Sub_metering_2, type = "l" , color = "red")
?lines
line(totime, b$Sub_metering_2, par(color = "red"))
par(color = "red")
?par
par(bg = "red")
line(totime, b$Sub_metering_2)
line(totime, b$Sub_metering_3)
line(totime, b$Sub_metering_3)
par(color = "red")
plot(totime, b$Sub_metering_1, type = "l",  ylab = "Energy sub metering", xlab = "")
plot(totime, b$Sub_metering_1, type = "l",  ylab = "Energy sub metering", xlab = "")
par(bg = "")
par(bg = "white")
plot(totime, b$Sub_metering_1, type = "l",  ylab = "Energy sub metering", xlab = "")
line(totime, b$Sub_metering_2, type = "l")
line(totime, b$Sub_metering_2)
save.image("~/data/proj1.RData")
?plot
?points
plot(totime, b$Sub_metering_1, type = "l", col = "black"  ylab = "Energy sub metering", xlab = "")
plot(totime, b$Sub_metering_1, type = "l", col = "black"  ylab = "Energy sub metering", xlab = "")
?lines
plot(totime, b$Sub_metering_1, type = "l", col = "black", ylab = "Energy sub metering", xlab = "")
line(totime, b$Sub_metering_2, type = "l", col = "red")
line(totime, b$Sub_metering_2, col = "red")
line(totime, b$Sub_metering_2)
plot(line)
?col
?color
??color
plot(totime, b$Sub_metering_1, type = "l", col = 2, ylab = "Energy sub metering", xlab = "")
plot(totime, b$Sub_metering_1, type = "l", col = 1, ylab = "Energy sub metering", xlab = "")
line(totime, b$Sub_metering_2, col = 2)
line(totime, b$Sub_metering_2,)
line(totime, b$Sub_metering_2, type = "l", col = 2, ...)
line(totime, b$Sub_metering_2, type = "l", col = 2)
?par
plot(totime, b$Sub_metering_1, type = "l", col = 1, ylab = "Energy sub metering", xlab = "")
par(new = F)
line(totime, b$Sub_metering_2, type = "l", col = 2)
plot(totime, b$Sub_metering_1, type = "l", col = 2)
plot(totime, b$Sub_metering_1, type = "l", col = 1, ylab = "Energy sub metering", xlab = "")
par(new = T)
line(totime, b$Sub_metering_2, type = "l", col = 2)
plot(totime, b$Sub_metering_1, type = "l", col = 2)
plot(totime, b$Sub_metering_1, type = "l", col = 1, ylab = "Energy sub metering", xlab = "")
plot(rnorm(100),type="l",col=2)
lines(rnorm(100),col=3)
plot(totime, b$Sub_metering_1, type = "l", col = 1)
