require(xgboost); require(readr); require(caret)

train <- read_csv("C:/Users/amulya/Documents/Kaggle/Walmart/train.csv")

test <- read_csv("C:/Users/amulya/Documents/Kaggle/Walmart/test.csv")

feature.names <- names(train)[!names(train) %in% c("TripType")]

#very basic stuff--------------------------------------------------------------------------------

cat("assuming text variables are categorical & replacing them with numeric ids\n")

for (f in feature.names) {

    if (class(train[[f]])=="character") {
  
        levels <- unique(c(train[[f]], test[[f]]))
    
        train[[f]] <- as.integer(factor(train[[f]], levels=levels))
    
        test[[f]]  <- as.integer(factor(test[[f]],  levels=levels))
  }
}

train[is.na(train)] <- 0

test[is.na(test)] <- 0

tra <- train[, feature.names]

split <- createDataPartition(y = train$TripType, p = 0.9, list = F) 

response_val <- train$TripType[-split]

response_train <- train$TripType[split]

dval <- xgb.DMatrix(data=data.matrix(tra[-split,]),  label = response_val )

dtrain <- xgb.DMatrix(data=data.matrix(tra[split,]), label = response_train)

watchlist <- list(val=dval, train=dtrain)


#basic training----------------------------------------------------------------------------------

numberOfClasses <- 39

param <- list("objective" = "multi:softprob",

              "eval_metric" = "mlogloss",
              
              "num_class" = numberOfClasses)

cv.nround <- 5

cv.nfold <- 3

bst.cv = xgb.cv(param=param, data = dtrain, label = train$TripType, 

                nfold = cv.nfold, nrounds = cv.nround)
